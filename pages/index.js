import Head from 'next/head';
import {
  getCsrfToken,
  getProviders,
  getSession,
  useSession,
} from 'next-auth/react';
import Feed from '../components/Feed';
import Sidebar from '../components/Sidebar';
import Login from '../components/Login';
import Modal from '../components/Modal';
import { useRecoilState } from 'recoil';
import { modalState } from '../atoms/modalAtom';
import Widgets from '../components/Widgets';

export default function Home({
  trendingResults,
  followResults,
  providers,
  csrfToken,
}) {
  const { data: session } = useSession();
  const [isOpen] = useRecoilState(modalState);
  if (!session) return <Login providers={providers} csrfToken={csrfToken} />;
  return (
    <>
      <Head>
        <title>Twitter Clone</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='bg-black min-h-screen flex max-w-[1500px] mx-auto'>
        <Sidebar />

        <Feed />

        <Widgets
          trendingResults={trendingResults}
          followResults={followResults}
        />
        {isOpen && <Modal />}
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  // const results = await Promise.allSettled([
  //   fetchData('https://jsonkeeper.com/b/WWMJ'),
  //   fetchData('https://jsonkeeper.com/b/1HOZ'),
  // ]);
  // const [trendingResults, followResults] = results;
  const trendingResults = [
    {
      heading: 'T20 World Cup 2021 Â· LIVE',
      description:
        'NZvAUS: New Zealand and Australia clash in the T20 World Cup final',
      img: 'https://rb.gy/d9yjtu',
      tags: ['#T20WorldCupFinal, ', 'Kane Williamson'],
    },
    {
      heading: 'Trending in United Arab Emirates',
      description: '#earthquake',
      img: 'https://rb.gy/jvuy4v',
      tags: ['#DubaiAirshow, ', '#gessdubai'],
    },
    {
      heading: 'Trending in Digital Creators',
      description: 'tubbo and quackity',
      img: '',
      tags: ['QUACKITY AND TUBBO,'],
    },
  ];
  const followResults = [
    { userImg: 'https://rb.gy/urakiy', username: 'SpaceX', tag: '@SpaceX' },
    {
      userImg: 'https://rb.gy/aluxgh',
      username: 'Elon Musk',
      tag: '@elonmusk',
    },
    { userImg: 'https://rb.gy/zyvazm', username: 'Tesla', tag: '@Tesla' },
  ];

  const providers = await getProviders();
  const session = await getSession(context);
  const csrfToken = await getCsrfToken(context);
  return {
    props: {
      trendingResults,
      followResults,
      providers,
      session,
      csrfToken,
    },
  };
}

// Generic function to throw if any errors occurred, or return the responses
// if no errors happened
function handleResults(results) {
  const errors = results
    .filter((result) => result.status === 'rejected')
    .map((result) => result.reason);

  if (errors.length) {
    // Aggregate all errors into one
    throw new AggregateError(errors);
  }

  return results.map((result) => result.value);
}

async function getPageData() {
  const results = await Promise.allSettled([fetchUser(), fetchProduct()]);

  const [user, product] = handleResults(results);
}
